from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramForbiddenError, TelegramBadRequest


from main_app.core.bot_config import bot
from main_app.core.app_config import settings
from main_app.core.logger import logger
from main_app.keyboards.menu_panel import set_admin_commands, set_user_commands, clear_commands
from main_app.services.functions import send_posts
from main_app.keyboards.user_keyboard import USER_KB
from main_app.database.crud import save_user_to_db

start_router = Router()


@start_router.message(F.text == "/start")
async def cmd_start(message: Message, state: FSMContext):
    await state.clear()
    if message.from_user.id in settings.list_admin_id:  # id –∞–¥–º–∏–Ω–∞ –≤ config.py
        await set_admin_commands(bot, message.from_user.id)
        await message.answer("üëã –ü—Ä–∏–≤–µ—Ç, –ê–¥–º–∏–Ω!\n\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–ú–ï–ù–Æ' –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π.")
    else:
        await clear_commands(bot, message.from_user.id)
        await message.answer("–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å ¬´20 —à–∞–≥–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏–º–ø–æ—Ä—Ç–∞¬ª, –Ω—É–∂–Ω–æ –≤–∞—à–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∏–∂–µ ‚¨áÔ∏èüëá\n\n"
            "–í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å:\n"
            "1. –ù–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ (—Å—Å—ã–ª–∫–∞) —Å –ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ (—Å—Å—ã–ª–∫–∞)\n"
            "2. –ù–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Ä–∞—Å—Å—ã–ª–æ–∫ (—Å—Å—ã–ª–∫–∞)\n\n"
            "–ü–∏—Å—å–º–∞ –±—É–¥—É—Ç –ø–æ –¥–µ–ª—É.\n"
            "–û—Ç –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–µ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è, –∏–º–ø–æ—Ä—Ç–µ—Ä–∞, –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–∞ –ø–æ —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å–∞, —Ç—Ä–µ–Ω–µ—Ä–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –¥–∞ –∏ –ø—Ä–æ—Å—Ç–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –ª—é–±—è—â–µ–≥–æ —Å–≤–æ—é –∂–∏–∑–Ω—åüî•\n\n"
            "–í—ã –¥–∞—ë—Ç–µ —Å–≤–æ—ë —Å–æ–≥–ª–∞—Å–∏–µ?\n\n"
            "–î–∞, —Å–æ–≥–ª–∞—à–∞—é—Å—å\n"
            "(–î–∞–≤–∞–π—Ç–µ —É–∂–µ —Å–≤—è–∑–∫–∏, —è –≤—ã–≥–æ—Ä–µ–ª/–∞)‚§µ", reply_markup=USER_KB.privacy_kb())


@start_router.callback_query(F.data.startswith("conf_privacy"))
async def conf_privacy(callback: CallbackQuery, state: FSMContext):
    await state.update_data(name=f"{callback.from_user.last_name} {callback.from_user.first_name}")
    user_data = await state.get_data()
    try:
        await save_user_to_db(user_data, callback.from_user.id, callback.from_user.username)
    except Exception as ex:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î: {ex}")
    # await callback.message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∑–∞–±—Ä–∞—Ç—å –≥–∞–π–¥!"
    #                               "\n\n–ñ–µ–ª–∞—é –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞!"
    #                               "\n\n–í–∏–¥–µ–æ –Ω–∏–∂–µ.", reply_markup=USER_KB.watching_video(1))

    await send_posts()

